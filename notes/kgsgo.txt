./clconvolve1 dataset=kgsgo numtr
ain=100000 numtest=10000 loadondemand=1 netdef=32c5{z}-32c5{z}-500n-361n
Using dataset kgsgo:
   datadir: ../data/kgsgo:
   trainfile: kgsgo-train10k-v2.dat:
   validatefile: kgsgo-test-v2.dat:
Ntrain 100000 numPlanes 7 boardSize 19
after load images 0 ms
 board stats mean 12.3231 stdDev 54.6854
 board norm translate -12.3231 scale 0.00914321
after getting stats 1516 ms
Using NVIDIA Corporation platform: NVIDIA CUDA
Using device: GRID K520
layer 0:InputLayer<unsigned char>{ outputPlanes 7 outputBoardSize 19 }
layer 1:NormalizationLayer { outputPlanes=7 outputBoardSize=19 translate=-12.3231 scale=0.00914321 }
layer 2:ConvolutionalLayer{ LayerDimensions{ inputPlanes=7 inputBoardSize=19 numFilters=32 filterSize=5 outputBoardSize=19 padZeros=1 biased=1 skip=0} RELU }
layer 3:ConvolutionalLayer{ LayerDimensions{ inputPlanes=32 inputBoardSize=19 numFilters=32 filterSize=5 outputBoardSize=19 padZeros=1 biased=1 skip=0} RELU }
layer 4:FullyConnectedLayer{ numPlanes=500 boardSize=1 TANH }
layer 5:FullyConnectedLayer{ numPlanes=361 boardSize=1 LINEAR }
layer 6:SoftMaxLayer{ perPlane=0 numPlanes=361 boardSize=1 }
before learning start 3966 ms
dumpTimings 0

after epoch 1 523749 ms
annealed learning rate: 0.002 training loss: 566106
 train accuracy: 780/100000 0.78%
test accuracy: 159/10000 1.59%
after tests 26644 ms
wrote weights to file, filesize 23397KB
dumpTimings 0

after epoch 2 523248 ms
annealed learning rate: 0.002 training loss: 534925
 train accuracy: 2725/100000 2.725%
test accuracy: 535/10000 5.35%
after tests 26786 ms
wrote weights to file, filesize 23397KB
dumpTimings 0

after epoch 3 523196 ms
annealed learning rate: 0.002 training loss: 463241
 train accuracy: 11616/100000 11.616%
test accuracy: 1245/10000 12.45%
after tests 26820 ms
wrote weights to file, filesize 23397KB

after epoch 4 523956 ms
annealed learning rate: 0.002 training loss: 382691
 train accuracy: 22498/100000 22.498%
test accuracy: 1356/10000 13.56%
after tests 27058 ms
wrote weights to file, filesize 23397KB

....

StatefulTimer readings:
   GenericLoader::load end: 429ms
   GenericLoader::load start: 30ms
   layer2 BackpropWeights2Scratch end: 5468ms
   layer2 Propagate3::propagate after call propagate: 4296ms
   layer2 backproperrors(): updated weights, layer 2: 1ms
   layer3     propagate layer 3, START: 1ms
   layer3 BackpropErrorsv2Naive end: 35156ms
   layer3 BackpropWeights2Scratch end: 21875ms
   layer3 Propagate3::propagate after call propagate: 19764ms
   layer4 BackpropErrorsv2Naive end: 35156ms
   layer4 BackpropWeights2Scratch end: 59372ms
   layer4 Propagate1::propagate after call propagate: 255969ms
   layer5 BackpropWeights2Scratch end: 95313ms
   layer5 Propagate1::propagate after call propagate: 7735ms
   layer6 end SoftMaxLayer propagate: 859ms

after epoch 8 520427 ms
annealed learning rate: 0.002 training loss: 209379
 train accuracy: 48990/100000 48.99%
test accuracy: 1627/10000 16.27%
after tests 26316 ms
wrote weights to file, filesize 23397KB
dumpTimings 1
StatefulTimer readings:
   GenericLoader::load end: 429ms
   GenericLoader::load start: 30ms
   layer2 BackpropWeights2Scratch end: 5489ms
   layer2 Propagate3::propagate after call propagate: 4297ms
   layer2 backproperrors(): updated weights, layer 2: 4ms
   layer3     propagate layer 3, START: 6ms
   layer3 BackpropErrorsv2Naive end: 35156ms
   layer3 BackpropWeights2Scratch end: 21875ms
   layer3 Propagate3::propagate after call propagate: 19764ms
   layer4 BackpropErrorsv2Naive end: 35156ms
   layer4 BackpropWeights2Scratch end: 59367ms
   layer4 Propagate1::propagate after call propagate: 255631ms
   layer5 BackpropWeights2Scratch end: 95313ms
   layer5 Propagate1::propagate after call propagate: 7735ms
   layer6 end SoftMaxLayer propagate: 859ms

after epoch 9 520529 ms
annealed learning rate: 0.002 training loss: 192940
 train accuracy: 51639/100000 51.639%
test accuracy: 1597/10000 15.97%
after tests 26617 ms
wrote weights to file, filesize 23397KB

=========================
./clconvolve1 dataset=kgsgo numtrain=1000000 numtest=10000 netdef=8c5{z}-mp2-16c5{z}-mp3-500n-361n loadondemand=1 dumptimings=1
Using device: GRID K520
layer 0:InputLayer<unsigned char>{ outputPlanes 7 outputBoardSize 19 }
layer 1:NormalizationLayer { outputPlanes=7 outputBoardSize=19 translate=-12.3682 scale=0.00912738 }
layer 2:ConvolutionalLayer{ LayerDimensions{ inputPlanes=7 inputBoardSize=19 numFilters=8 filterSize=5 outputBoardSize=19 padZeros=1 biased=1 skip=0} RELU }
layer 3:PoolingLayer{ inputPlanes=8 inputBoardSize=19 poolingSize=2 }
layer 4:ConvolutionalLayer{ LayerDimensions{ inputPlanes=8 inputBoardSize=9 numFilters=16 filterSize=5 outputBoardSize=9 padZeros=1 biased=1 skip=0} RELU }
layer 5:PoolingLayer{ inputPlanes=16 inputBoardSize=9 poolingSize=3 }
layer 6:FullyConnectedLayer{ numPlanes=500 boardSize=1 TANH }
layer 7:FullyConnectedLayer{ numPlanes=361 boardSize=1 LINEAR }
layer 8:SoftMaxLayer{ perPlane=0 numPlanes=361 boardSize=1 }
before learning start 1691 ms
StatefulTimer readings:
   GenericLoader::load start: 78ms
dumpTimings 1
StatefulTimer readings:
   GenericLoader::load end: 3910ms
   START: 1691ms
   layer2     propagate layer 2, copied to device: 1ms
   layer2 BackpropWeights2Scratch end: 23618ms
   layer2 Propagate3::propagate after call propagate: 8030ms
   layer2 backprop(): start, layer 2: 7818ms
   layer2 backproperrors(): updated weights, layer 2: 189ms
   layer3 PoolingPropagateGpuNaive::propagate start: 35ms
   layer4 BackpropErrorsv2Naive end: 7812ms
   layer4 BackpropWeights2Scratch end: 15625ms
   layer4 Propagate3::propagate after call propagate: 4ms
   layer6 BackpropErrorsv2Naive end: 537ms
   layer6 BackpropWeights2Scratch end: 70312ms
   layer6 Propagate1::propagate after call propagate: 23437ms
   layer7 BackpropErrorsv2Naive end: 6706ms
   layer7 BackpropWeights2Scratch end: 953125ms
   layer7 Propagate1::propagate after call propagate: 70312ms
   layer7 backproperrors(): updated weights, layer 7: 278ms
   layer8 end SoftMaxLayer propagate: 7813ms

after epoch 1 1.26485e+06 ms
annealed learning rate: 0.002 training loss: 5.3467e+06
 train accuracy: 22584/1000000 2.2584%
test accuracy: 401/10000 4.01%
after tests 1417 ms
wrote weights to file, filesize 1011KB



